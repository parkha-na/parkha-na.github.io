---
layout: post
title:  "MTV & MVC"
date:   2024-02-07
categories:
---

# MTV pattern
MTV 패턴은 Model-Template-View의 약자로, 웹 프레임워크 Django에서 사용되는 디자인 패턴입니다. MTV는 MVC 패턴과 유사하지만, 몇 가지 다른 용어 및 개념을 사용합니다.

Model (모델):

MTV 패턴에서의 모델은 데이터베이스와 연관된 부분으로, 데이터의 구조와 동작을 정의합니다.
데이터베이스의 테이블을 나타내고, 데이터를 검색, 저장, 업데이트, 삭제하는 메서드를 제공합니다.
Template (템플릿):

템플릿은 사용자에게 보여지는 부분으로, HTML 및 템플릿 언어를 사용하여 동적으로 생성됩니다.
뷰에서 전달된 데이터를 템플릿을 통해 적절한 형식으로 표시하여 사용자에게 보여줍니다.
View (뷰):

뷰는 사용자의 요청을 처리하고, 모델에서 필요한 데이터를 가져와 템플릿에 전달합니다.
사용자의 입력을 처리하고, 해당하는 모델의 메서드를 호출하여 데이터를 가져오거나 업데이트합니다.
최종적으로 템플릿에 데이터를 전달하여 클라이언트에게 응답을 생성합니다.
MTV 패턴은 MVC 패턴과 유사하게 코드를 분리하고 재사용성을 높이는 데 중점을 둡니다. Django에서는 MTV 패턴을 통해 웹 애플리케이션을 개발하며, 모델은 데이터베이스와 관련된 로직을 처리하고, 뷰는 사용자의 요청을 처리하고 데이터를 적절히 가공한 후 템플릿에 전달하여 사용자에게 제공합니다.

## MVC pattern
MVC는 Model-View-Controller의 약자로, 소프트웨어 디자인 패턴 중 하나입니다. 이 패턴은 소프트웨어를 세 가지 주요 구성 요소로 분리하여 유지보수성과 확장성을 향상시키는 데 목적이 있습니다. 각 구성 요소는 특정한 역할을 수행하며, 사용자 인터페이스와 비즈니스 로직을 분리하여 코드를 구조화합니다.

Model (모델):

어플리케이션의 데이터와 비즈니스 로직을 담당합니다.
데이터베이스와의 상호 작용, 데이터의 처리, 비즈니스 규칙 등을 처리합니다.
모델의 변경은 뷰와 컨트롤러에게 알려져 업데이트를 유발합니다.
View (뷰):

사용자에게 데이터를 시각적으로 표시하는 부분입니다.
모델에서 받은 데이터를 사용자 인터페이스로 표현하며, 사용자의 입력을 컨트롤러로 전달합니다.
뷰는 모델의 상태를 직접 변경하지 않고, 모델의 변경 사항을 감지하여 업데이트됩니다.
Controller (컨트롤러):

사용자의 입력을 받고 처리하는 부분으로, 모델과 뷰 간의 상호 작용을 관리합니다.
사용자가 뷰를 통해 어떤 동작을 하면, 컨트롤러는 이를 받아 모델을 업데이트하거나 모델로부터 데이터를 가져와 뷰를 업데이트합니다.
사용자 인터페이스와 비즈니스 로직 간의 결합도를 낮추어 재사용성을 높이고, 코드 유지보수를 용이하게 합니다.
MVC 패턴을 사용하면 각 구성 요소가 독립적으로 변경 가능하므로, 코드의 가독성과 확장성이 향상되며 유지보수가 용이해집니다. 이는 특히 대규모 애플리케이션의 개발에서 유용하게 활용됩니다.
